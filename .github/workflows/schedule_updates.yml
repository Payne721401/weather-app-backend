name: Scheduled Weather Data Updates

on:
  # 允許手動從 GitHub Actions 頁面觸發此工作流程，方便測試
  workflow_dispatch:
    inputs:
      task_name:
        description: '手動執行單一任務的名稱 (例如 update_radar)，留空則執行所有任務'
        required: false
        default: ''

  schedule:
    # 使用 CRON 語法定義排程
    # 註解：CRON 時間為 UTC，比台灣時間慢 8 小時
    
    # 每 10 分鐘執行一次 (用於 radar, current_weather)
    - cron: '*/10 * * * *'
    
    # 每小時的第 20 分鐘執行一次 (用於 uv, air_quality)
    - cron: '0 * * * *'
    
    # 每 3 小時執行一次 (用於 3-hour)
    - cron: '0 */3 * * *'
    
    # 每天 UTC 時間 06:00 和 18:00 執行一次 (用於 weekly)
    - cron: '0 6,18 * * *'
    
    # 每天 UTC 時間 16:00 (台灣時間午夜 00:00) 執行一次 (用於 sunrise_sunset)
    - cron: '0 16 * * *'

  # 允許透過 API 外部觸發
  repository_dispatch:
    types: [run-single-task]

jobs:
  run-tasks:
    # 在最新的 Ubuntu 虛擬環境中執行
    runs-on: ubuntu-latest
    
    steps:
      # 步驟 1: 從您的儲存庫下載程式碼到虛擬環境
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 步驟 2-4: 設定 Python 環境
      - name: Setup Python Environment
        uses: ./.github/actions/setup-python-env
        with:
          gcp-sa-key: ${{ secrets.GCP_SA_KEY_BASE64 }}
          cwa-api-key: ${{ secrets.CWA_API_KEY }}
          ncdr-api-key: ${{ secrets.NCDR_API_KEY }}
          monev-api-key: ${{ secrets.MONEV_API_KEY }}
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          telegram-bot-token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          telegram-chat-id: ${{ secrets.TELEGRAM_CHAT_ID }}
          r2-bucket-name: ${{ vars.R2_BUCKET_NAME }}
          r2-endpoint-url: ${{ vars.R2_ENDPOINT_URL }}

      # 步驟 5: 根據排程時間執行對應的 Python 腳本任務
      - name: Run Scheduled Tasks
        run: |
          # 檢查是否為手動或外部 API 觸發，且有指定單一任務
          if [[ ( "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.task_name }}" != "" ) || ( "${{ github.event_name }}" == "repository_dispatch" ) ]]; then
            # 取得要執行的任務名稱
            TASK_TO_RUN=""
            if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
              TASK_TO_RUN="${{ github.event.inputs.task_name }}"
            else # repository_dispatch
              TASK_TO_RUN="${{ github.event.client_payload.task }}"
            fi
            
            echo "Running single task: $TASK_TO_RUN"
            python functions/main.py "$TASK_TO_RUN"
            exit 0 # 執行完畢後直接結束
          fi

          # 如果是手動觸發但未指定任務，則執行所有任務
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.task_name }}" == "" ]]; then
            echo "Manual trigger: Running all tasks for testing..."
            python functions/main.py update_current_weather || true
            python functions/main.py update_radar || true
            python functions/main.py update_three_hour_forecast || true
            python functions/main.py update_weekly_forecast || true
            python functions/main.py update_uv_index || true
            python functions/main.py update_air_quality || true
            python functions/main.py update_sunrise_sunset || true
            exit 0
          fi

          # --- 以下為排程觸發的任務 ---

          # 每 10 分鐘執行的任務
          if [[ "${{ github.event.schedule }}" == "*/10 * * * *" ]]; then
            echo "Running 10-minute tasks..."
            python functions/main.py update_radar || true
          fi
          
          # 每小時執行的任務
          if [[ "${{ github.event.schedule }}" == "0 * * * *" ]]; then
            echo "Running hourly tasks in parallel..."
            python functions/main.py update_current_weather &
            python functions/main.py update_uv_index &
            python functions/main.py update_air_quality &
            wait  # 等待所有背景任務完成
          fi

          # 每 3 小時執行的任務
          if [[ "${{ github.event.schedule }}" == "0 */3 * * *" ]]; then
            echo "Running 3-hourly tasks..."
            python functions/main.py update_three_hour_forecast || true
          fi

          # 每日兩次的任務 (6:00, 18:00 UTC)
          if [[ "${{ github.event.schedule }}" == "0 6,18 * * *" ]]; then
            echo "Running twice-daily tasks..."
            python functions/main.py update_weekly_forecast || true
          fi

          # 每日執行的任務
          if [[ "${{ github.event.schedule }}" == "0 16 * * *" ]]; then
            echo "Running daily tasks..."
            python functions/main.py update_sunrise_sunset || true
          fi
