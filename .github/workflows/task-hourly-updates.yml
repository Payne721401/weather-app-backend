# This workflow runs hourly update tasks concurrently.
# It can also be triggered manually from the Actions tab, which will run all jobs in parallel.

name: Task - Hourly Updates (Concurrent)

on:
  schedule:
    # Runs at the start of every hour
    - cron: '0 * * * *'
  
  workflow_dispatch:

jobs:
  # Job 1: Update Current Weather
  update-current-weather:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache venv
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-weather-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            venv-${{ runner.os }}-weather-

      - name: Install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Decode GCP Service Account Key
        run: |
          echo "${{ secrets.GCP_SA_KEY_BASE64 }}" | base64 --decode > "${{ runner.temp }}/gcp-key.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS=${{ runner.temp }}/gcp-key.json" >> $GITHUB_ENV

      - name: Run Current Weather Task
        env:
          CWA_API_KEY: ${{ secrets.CWA_API_KEY }}
          NCDR_API_KEY: ${{ secrets.NCDR_API_KEY }}
          MONEV_API_KEY: ${{ secrets.MONEV_API_KEY }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          R2_BUCKET_NAME: ${{ vars.R2_BUCKET_NAME }}
          R2_ENDPOINT_URL: ${{ vars.R2_ENDPOINT_URL }}
        run: |
          source .venv/bin/activate
          python functions/main.py update_current_weather

  # Job 2: Update UV Index
  update-uv-index:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache venv
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-uv-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            venv-${{ runner.os }}-uv-

      - name: Install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Decode GCP Service Account Key
        run: |
          echo "${{ secrets.GCP_SA_KEY_BASE64 }}" | base64 --decode > "${{ runner.temp }}/gcp-key.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS=${{ runner.temp }}/gcp-key.json" >> $GITHUB_ENV

      - name: Run UV Index Task
        env:
          CWA_API_KEY: ${{ secrets.CWA_API_KEY }}
          NCDR_API_KEY: ${{ secrets.NCDR_API_KEY }}
          MONEV_API_KEY: ${{ secrets.MONEV_API_KEY }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          R2_BUCKET_NAME: ${{ vars.R2_BUCKET_NAME }}
          R2_ENDPOINT_URL: ${{ vars.R2_ENDPOINT_URL }}
        run: |
          source .venv/bin/activate
          python functions/main.py update_uv_index

  # Job 3: Update Air Quality
  update-air-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache venv
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-air-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            venv-${{ runner.os }}-air-

      - name: Install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Decode GCP Service Account Key
        run: |
          echo "${{ secrets.GCP_SA_KEY_BASE64 }}" | base64 --decode > "${{ runner.temp }}/gcp-key.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS=${{ runner.temp }}/gcp-key.json" >> $GITHUB_ENV

      - name: Run Air Quality Task
        env:
          CWA_API_KEY: ${{ secrets.CWA_API_KEY }}
          NCDR_API_KEY: ${{ secrets.NCDR_API_KEY }}
          MONEV_API_KEY: ${{ secrets.MONEV_API_KEY }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          R2_BUCKET_NAME: ${{ vars.R2_BUCKET_NAME }}
          R2_ENDPOINT_URL: ${{ vars.R2_ENDPOINT_URL }}
        run: |
          source .venv/bin/activate
          python functions/main.py update_air_quality
